{"name": "test_loginFailMethod", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <AppiumFramework.tests.LoginTest.LoginTest testMethod=test_loginFailMethod>\n\n    @pytest.mark.run(order=3)\n    def test_loginFailMethod(self):\n        cl.allureLogs(\"App Opened\")\n        self.gt.clickLoginBotton()\n        self.gt.enterEmail()\n        self.gt.enterPassword2()\n        self.gt.clickOnLoginB()\n>       self.gt.verifyAdminScreen()\n\nLoginTest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFramework.pages.LoginPage.LoginPageTest object at 0x000002480265B880>\n\n    def verifyAdminScreen(self):\n        adminScreen = self.isDisplayed(self._pageTitle,\"text\")\n>       assert adminScreen == True\nE       AssertionError\n\n..\\pages\\LoginPage.py:44: AssertionError"}, "steps": [{"name": "App Opened", "status": "passed", "start": 1673310123438, "stop": 1673310123438}, {"name": "Click on Login Button", "status": "passed", "start": 1673310124071, "stop": 1673310124071}, {"name": "Entered email id", "status": "passed", "start": 1673310125991, "stop": 1673310125991}, {"name": "Entered Password", "status": "passed", "start": 1673310127066, "stop": 1673310127066}, {"name": "Clicked on Login Button in Login Screen", "status": "passed", "start": 1673310127721, "stop": 1673310127721}], "attachments": [{"name": "text", "source": "a82df50a-a822-41fb-ad75-b1bf20ee724e-attachment.png", "type": "image/png"}, {"name": "log", "source": "e7cf00de-a1ab-4346-8856-0761046bf0ae-attachment.txt", "type": "text/plain"}], "start": 1673310123437, "stop": 1673310153422, "uuid": "9216c875-63aa-4e17-ada5-52dac25df8d4", "historyId": "eb1ccc0d95544cdef7ee9a4e8770ec68", "testCaseId": "0e3892d464f1f164b14c4fe50287acd6", "fullName": "LoginTest.LoginTest#test_loginFailMethod", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "LoginTest"}, {"name": "subSuite", "value": "LoginTest"}, {"name": "host", "value": "DESKTOP-CL62PMK"}, {"name": "thread", "value": "17928-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "LoginTest"}]}