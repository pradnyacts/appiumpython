{"name": "test_loginFailMethod", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <AppiumFramework.tests.LoginTest.LoginTest testMethod=test_loginFailMethod>\n\n    @pytest.mark.run(order=3)\n    def test_loginFailMethod(self):\n        cl.allureLogs(\"App Opened\")\n        self.gt.clickLoginBotton()\n        self.gt.enterEmail()\n        self.gt.enterPassword2()\n        self.gt.clickOnLoginB()\n>       self.gt.verifyAdminScreen()\n\nLoginTest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <AppiumFramework.pages.LoginPage.LoginPageTest object at 0x000001F4179F2B80>\n\n    def verifyAdminScreen(self):\n        adminScreen = self.isDisplayed(self._pageTitle,\"text\")\n>       assert adminScreen == True\nE       AssertionError\n\n..\\pages\\LoginPage.py:44: AssertionError"}, "steps": [{"name": "App Opened", "status": "passed", "start": 1673310488809, "stop": 1673310488809}, {"name": "Click on Login Button", "status": "passed", "start": 1673310489454, "stop": 1673310489454}, {"name": "Entered email id", "status": "passed", "start": 1673310490912, "stop": 1673310490912}, {"name": "Entered Password", "status": "passed", "start": 1673310491989, "stop": 1673310491989}, {"name": "Clicked on Login Button in Login Screen", "status": "passed", "start": 1673310492542, "stop": 1673310492542}], "attachments": [{"name": "text", "source": "ba5a22a3-0247-4acf-930a-58e6b072633d-attachment.png", "type": "image/png"}, {"name": "log", "source": "ad76b2b9-794c-471c-972c-8908f7ca5077-attachment.txt", "type": "text/plain"}], "start": 1673310488809, "stop": 1673310518092, "uuid": "1a562528-0a77-44f3-a5be-6a3ac08bfd42", "historyId": "aeb6c84858cb897d59574054d46d09e3", "testCaseId": "1512c76b4b2d60f059541c0f73c45353", "fullName": "TestSuite.LoginTest#test_loginFailMethod", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "suite", "value": "TestSuite"}, {"name": "subSuite", "value": "LoginTest"}, {"name": "host", "value": "DESKTOP-CL62PMK"}, {"name": "thread", "value": "8652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite"}]}